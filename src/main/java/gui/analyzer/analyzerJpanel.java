/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.analyzer;

import analyzerGraphs.DistanceLineChartCreator;
import analyzerGraphs.EffortActualLineChartCreator1;
import analyzerGraphs.EffortLineChartCreator;
import analyzerGraphs.barChartCreator;
import analyzerGraphs.valueLineChartCreator;
import dataTemplates.DataIssueTemplate;
import dataTemplates.ReleaseCalendarTemplate;
import dataTemplates.ReleaseInfoCollection;
import dataTemplates.resultTemplate;
import homeBackend.homeAnalyzer;
import static homeBackend.mainRunning.releaseEnd;
import static homeBackend.mainRunning.releaseStart;
import static homeBackend.mainRunning.strFilePath;
import java.awt.BorderLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;

/**
 *
 * @author Didar
 */
public class analyzerJpanel extends javax.swing.JPanel {

    /**
     * Creates new form analyzerJpanel
     */
    public analyzerJpanel(ArrayList<DataIssueTemplate> tmpallIssueData) {
        initComponents();
        this.allIssueData = tmpallIssueData; 
        System.out.println("from the jpanel "+allIssueData.get(10).getStrKey());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jXDatePicker1ReleaseStart = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker2releaseEnd = new org.jdesktop.swingx.JXDatePicker();
        jComboBox1replanInterval = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        graph1ScrollPane = new javax.swing.JScrollPane();
        chart1JPanel = new javax.swing.JPanel();
        chart2JPanel = new javax.swing.JPanel();
        chart3JPanel = new javax.swing.JPanel();
        chart4JPanel = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(1024, 768));

        jSplitPane1.setDividerLocation(250);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Generate Graphs");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1replanInterval.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "4", "6", "8", "10", "12", "14", "16" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Release start");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Release end");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Replan interval");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 255));
        jLabel4.setText("Analyzer View");

        jLabel5.setText("(This action may take upto five min to complete)");

        jLabel6.setText("Allows to analyze past releases how ");

        jLabel7.setText("how replanning in different interval can ");

        jLabel8.setText("impact  value and release goal");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Define release to analyze: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1replanInterval, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jXDatePicker1ReleaseStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jXDatePicker2releaseEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(56, 56, 56)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePicker1ReleaseStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePicker2releaseEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1replanInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(378, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        javax.swing.GroupLayout chart1JPanelLayout = new javax.swing.GroupLayout(chart1JPanel);
        chart1JPanel.setLayout(chart1JPanelLayout);
        chart1JPanelLayout.setHorizontalGroup(
            chart1JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 762, Short.MAX_VALUE)
        );
        chart1JPanelLayout.setVerticalGroup(
            chart1JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 719, Short.MAX_VALUE)
        );

        graph1ScrollPane.setViewportView(chart1JPanel);

        jTabbedPane1.addTab("Proposed value", graph1ScrollPane);

        javax.swing.GroupLayout chart2JPanelLayout = new javax.swing.GroupLayout(chart2JPanel);
        chart2JPanel.setLayout(chart2JPanelLayout);
        chart2JPanelLayout.setHorizontalGroup(
            chart2JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 763, Short.MAX_VALUE)
        );
        chart2JPanelLayout.setVerticalGroup(
            chart2JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Allignment with release goal", chart2JPanel);

        javax.swing.GroupLayout chart3JPanelLayout = new javax.swing.GroupLayout(chart3JPanel);
        chart3JPanel.setLayout(chart3JPanelLayout);
        chart3JPanelLayout.setHorizontalGroup(
            chart3JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 763, Short.MAX_VALUE)
        );
        chart3JPanelLayout.setVerticalGroup(
            chart3JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Proposed effort allotment", chart3JPanel);

        javax.swing.GroupLayout chart4JPanelLayout = new javax.swing.GroupLayout(chart4JPanel);
        chart4JPanel.setLayout(chart4JPanelLayout);
        chart4JPanelLayout.setHorizontalGroup(
            chart4JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 763, Short.MAX_VALUE)
        );
        chart4JPanelLayout.setVerticalGroup(
            chart4JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Actual effort allotment", chart4JPanel);

        jSplitPane1.setRightComponent(jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
         
        
        Date releaseStart = jXDatePicker1ReleaseStart.getDate();
        Date releaseEnd =jXDatePicker2releaseEnd.getDate(); 
        
        int daysForReplan = Integer.parseInt((String)jComboBox1replanInterval.getSelectedItem()); 
//        int daysForReplan =2;
        try { 
            runningAnalyzer (daysForReplan, releaseStart, releaseEnd );
        } catch (IOException ex) {
            Logger.getLogger(analyzerJpanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//        createBarChart ();
        createValueLineChart ();
        createDistanceLineChart ();
        createEffortLineChart();
        createEffortActualLineChart();
        
    }//GEN-LAST:event_jButton1ActionPerformed

//    public void createBarChart (){
////        XYLineChartExample obj_XYLineChartExample = new XYLineChartExample ();
////        graph1ScrollPane.setViewportView(obj_XYLineChartExample);
//        
////        BarChartDemo obj_BarChartDemo = new BarChartDemo ("ha ha ha"); 
//        barChartCreator obj_barChartCreator = new barChartCreator(list_resultAnalyzer);
//
//        ChartPanel myBarChart = new ChartPanel(obj_barChartCreator.getBarChart());
//        myBarChart.setMouseWheelEnabled(true);
//        chart3JPanel.setLayout(new java.awt.BorderLayout());
//        chart3JPanel.add(myBarChart,BorderLayout.CENTER);
//        chart3JPanel.validate();
//    }
    
    public void createValueLineChart (){
        valueLineChartCreator obj_LineChartCreator = new valueLineChartCreator(list_resultAnalyzer);

        ChartPanel myLineChart = new ChartPanel(obj_LineChartCreator.createValueLineChart());
        myLineChart.setMouseWheelEnabled(true);
        chart1JPanel.setLayout(new java.awt.BorderLayout());
        chart1JPanel.add(myLineChart,BorderLayout.CENTER);
        chart1JPanel.validate();
    }
    
    
    public void createDistanceLineChart (){
        DistanceLineChartCreator obj_LineChartCreator = new DistanceLineChartCreator(list_resultAnalyzer);

        ChartPanel myLineChart = new ChartPanel(obj_LineChartCreator.createDistanceLineChart());
        myLineChart.setMouseWheelEnabled(true);
        chart2JPanel.setLayout(new java.awt.BorderLayout());
        chart2JPanel.add(myLineChart,BorderLayout.CENTER);
        chart2JPanel.validate();
    }
    
    public void createEffortLineChart (){
        EffortLineChartCreator obj_LineChartCreator = new EffortLineChartCreator(list_resultAnalyzer);

        ChartPanel myLineChart = new ChartPanel(obj_LineChartCreator.createEffortLineChart());
        myLineChart.setMouseWheelEnabled(true);
        chart3JPanel.setLayout(new java.awt.BorderLayout());
        chart3JPanel.add(myLineChart,BorderLayout.CENTER);
        chart3JPanel.validate();
    }
    
    public void createEffortActualLineChart (){
        EffortActualLineChartCreator1 obj_LineChartCreator = new EffortActualLineChartCreator1(list_resultAnalyzer);

        ChartPanel myLineChart = new ChartPanel(obj_LineChartCreator.createEffortLineChart());
        myLineChart.setMouseWheelEnabled(true);
        chart4JPanel.setLayout(new java.awt.BorderLayout());
        chart4JPanel.add(myLineChart,BorderLayout.CENTER);
        chart4JPanel.validate();
    }
    
    
    public void dataReleaseDates(){
		
		obj_ReleaseInfoCollection = new ReleaseInfoCollection (releaseInfo); 
		
		//------------Releases from BSQ-Mail project 
		
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-02-05", true, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-05-14", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-05-18", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-05-26", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-06-16", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-05-30", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-07-14", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-07-14", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-07-28", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-08-16", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-08-25", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-09-01", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-09-07", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-09-09", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-09-14", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-10-14", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-11-10", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2016-12-22", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2017-03-30", false, "NR");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2017-04-27", false, "R");
		obj_ReleaseInfoCollection.fillUpReleaseInfo("2017-05-11", false, "NR");

	}
    
    
    public void runningAnalyzer (int daysForReplan, Date releaseStart, Date releaseEnd ) throws IOException{
		
		homeAnalyzer obj_homeAnalyzer;   
		dataReleaseDates();
		
                		 
				
				list_resultAnalyzer= new ArrayList <resultTemplate> (); 
				
				for (int replanIterator=2;replanIterator<15;replanIterator=replanIterator+daysForReplan){
					obj_homeAnalyzer = new homeAnalyzer (releaseStart, releaseEnd, replanIterator, allIssueData); 
					list_resultAnalyzer.add(obj_homeAnalyzer.runPlanner());
				}
				
				displayResults (1, list_resultAnalyzer);
		
                
                
                
                
                
                
		
//		for (int releasenum=2;releasenum<3;releasenum++){
//			 
//				releaseStart=obj_ReleaseInfoCollection.getReleaseDate(releasenum);
//				releaseEnd=obj_ReleaseInfoCollection.getReleaseDate(releasenum+1);
//				list_resultAnalyzer= new ArrayList <resultTemplate> (); 
//				
//				for (int replanIterator=2;replanIterator<15;replanIterator=replanIterator+daysForReplan){
//					obj_homeAnalyzer = new homeAnalyzer (releaseStart, releaseEnd, replanIterator, allIssueData); 
//					list_resultAnalyzer.add(obj_homeAnalyzer.runPlanner());
//				}
//				
//				displayResults (releasenum, list_resultAnalyzer);
//		}
	}
    
    
    public void displayResults (int releasenum, ArrayList <resultTemplate> tmplist_resultFormat) throws FileNotFoundException{
		PrintStream out = new PrintStream(new FileOutputStream(strFilePath+"output"+releasenum+".txt"));
		System.setOut(out);
		
		System.out.println(
				"releasenum1,"+
				"iterator.daysForReplan,"+
				"iterator.totalValue,"+
				"iterator.totalActualValue,"+
				 "iterator.actftrRatio,"+
				 "iterator.actbugRatio,"+
				 "iterator.actimpRatio,"+
				 "iterator.totalFtrTimeSpent,"+
				 "iterator.totalBugTimeSpent,"+
				 "iterator.totalImpTimeSpent,"+
				 "iterator.prpftrRatio,"+
				 "iterator.prpbugRatio,"+
				 "iterator.prpimpRatio,"+
				 "iterator.distance");
		
		for (resultTemplate iterator: tmplist_resultFormat){

			System.out.println(
					releasenum+ ","+
					iterator.daysForReplan+ ","+
					iterator.totalValue + ","+
					iterator.totalActualValue+ ","+
					 iterator.actftrRatio+ ","+
					 iterator.actbugRatio+ ","+
					 iterator.actimpRatio+ ","+
					 iterator.totalFtrTimeSpent+ ","+
					 iterator.totalBugTimeSpent+ ","+
					 iterator.totalImpTimeSpent+ ","+
					 iterator.prpftrRatio+ ","+
					 iterator.prpbugRatio+ ","+
					 iterator.prpimpRatio+ ","+
					 iterator.distance);
		
		}
	}
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chart1JPanel;
    private javax.swing.JPanel chart2JPanel;
    private javax.swing.JPanel chart3JPanel;
    private javax.swing.JPanel chart4JPanel;
    private javax.swing.JScrollPane graph1ScrollPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1replanInterval;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1ReleaseStart;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2releaseEnd;
    // End of variables declaration//GEN-END:variables
ArrayList<DataIssueTemplate> allIssueData; 
    JFreeChart chart; 

        public static ReleaseInfoCollection obj_ReleaseInfoCollection;
	public static ArrayList<ReleaseCalendarTemplate> releaseInfo = new ArrayList<ReleaseCalendarTemplate> ();
	public static ArrayList <resultTemplate> list_resultAnalyzer; 


}
